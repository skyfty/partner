<?php	class CustomerViewModel extends ViewModel {        protected $viewFields;		public function _initialize(){			$main_must_field = array(                'customer_id',                'owner_role_id',                'is_locked',                'creator_role_id',                'contacts_id',                'delete_role_id',                'create_time',                'delete_time',                'update_time',                'is_deleted',                'basic_verify',                'basic_submit_time',                'submit_state',                'is_verify',                'loans',                'actual',                'freeze',                'cash',                'trade_surplus_price',                'trainorder_surplus_price',                'business_surplus_price',                'market_surplus_price',                'sum_surplus_price',                'sicount',                'sfcount',                'slcount',                'sncount',                'telephone'=>'customer_telephone',                'wxopenid'=>'customer_wxopenid',                'name'=>'customer_name',                'idcode'=>'customer_idcode',                'branch_id',                'channel_model_id',                'channel_model',                'introducer',                'commiss_id',                'league_id',            );			$main_list = array_unique(array_merge(M('Fields')->where(array('model'=>'customer','is_main'=>1))->getField('field', true),$main_must_field));			$data_list = array_unique(array_merge(M('Fields')->where(array('model'=>'customer','is_main'=>0))->getField('field', true),array("baby_birthday_renind")));			$data_list['_on'] = 'customer.customer_id = customer_data.customer_id';			$this->viewFields = array('customer'=>$main_list,'customer_data'=>$data_list);		}        public function verity_check($customer, $cverity = true) {            $new_customer = $this->where('customer.customer_id = %d',$customer['customer_id'])->find();            $field_list = M('Fields')->where('model = "customer"')->order('order_id')->select();            $exclude_fields = array(                "create_time",                "update_time",                "webshow",                "balance"            );            $change_fields = array();            foreach($field_list as $fv) {                if (in_array($fv['field'], $exclude_fields)) {                    continue;                }                if ($new_customer[$fv['field']] != $customer[$fv['field']]) {                    $change_fields[] = model_field_diff($fv, $new_customer, $customer);                }            }            if ($cverity) {                $change_assort = array("basic" => 0);                foreach ($change_fields as $fv) {                    if ($fv['in_verify'] == 0) {                        continue;                    }                    $assort = "basic";                    $field_group_id = $fv['field_group_id'];                    if ($field_group_id != 0) {                        $field_group = M('fields_group')->where(array('field_group_id' => $field_group_id))->find();                        if ($field_group) {                            $assort = $field_group['assort'];                        }                    }                    $change_assort[$assort] += 1;                }                $where = array(                    "customer_id" => $customer['customer_id']                );                $m_customer = D('customer');                if ($change_assort['basic'] > 0) {                    $m_customer->where($where)->setField("basic_verify", 0);                }                $m_customer->where($where)->setField("is_verify", 1);            }            return $change_fields;        }	}